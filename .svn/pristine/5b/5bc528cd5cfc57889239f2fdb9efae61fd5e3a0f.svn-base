package com.nsdevil.osce.common.view;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Component;

@Component("excelDownloadView")
public class ExcelDownloadView extends AbstractExcelPOIView {
 
    @Override
    protected void buildExcelDocument(Map<String, Object> model, Workbook workbook, HttpServletRequest request, HttpServletResponse response) throws Exception {
 
//        String target = model.get("target").toString();
    	String target = "books";
 
        //target에 따라서 엑셀 문서 작성을 분기한다.
        if(target.equals("books")){
            //Object로 넘어온 값을 각 Model에 맞게 형변환 해준다.
        	List<HashMap<String, Object>> list = new ArrayList<HashMap<String, Object>>();
        	HashMap<String, Object> map1 = new HashMap<String, Object>();
        	map1.put("a", "a1");
        	map1.put("b", "b1");
        	HashMap<String, Object> map2 = new HashMap<String, Object>();
        	map2.put("a", "a2");
        	map2.put("b", "b2");
        	HashMap<String, Object> map3 = new HashMap<String, Object>();
        	map3.put("a", "a3");
        	map3.put("b", "b3");
        	list.add(map1);
        	list.add(map2);
        	list.add(map3);
        	
//            List<HashMap<String, Object>> list = (List<HashMap<String, Object>>) model.get("excelList");
            
            //Sheet 생성
            Sheet sheet = workbook.createSheet(target);
            Row row = null;
            int rowCount = 0;
            int cellCount = 0;
 
            // 제목 Cell 생성
            row = sheet.createRow(rowCount++);
 
            row.createCell(cellCount++).setCellValue("제목1");
            row.createCell(cellCount++).setCellValue("제목2");
 
            // 데이터 Cell 생성
            for (HashMap<String, Object> map : list) {
                row = sheet.createRow(rowCount++);
                cellCount = 0;
                row.createCell(cellCount++).setCellValue((String)map.get("a")); //데이터를 가져와 입력
                row.createCell(cellCount++).setCellValue((String)map.get("b"));
 
            }
 
        }
 
//        if(target.equals("booksDetail")){
// 
//            List<BooksDetail> booksDetailList = (List<BooksDetail>) model.get("excelList");
// 
//            //Sheet 생성
//            Sheet sheet = workbook.createSheet(target);
//            Row row = null;
//            int rowCount = 0;
//            int cellCount = 0;
// 
//            // 제목 Cell 생성
//            row = sheet.createRow(rowCount++);
// 
//            row.createCell(cellCount++).setCellValue("detail_id");
//            row.createCell(cellCount++).setCellValue("id");
//            row.createCell(cellCount++).setCellValue("publish_date");
//            row.createCell(cellCount++).setCellValue("best_seller_yn");
// 
//            // 데이터 Cell 생성
//            for (BooksDetail bookDetail : booksDetailList) {
//                row = sheet.createRow(rowCount++);
//                cellCount = 0;
//                row.createCell(cellCount++).setCellValue(bookDetail.getDetail_id());
//                row.createCell(cellCount++).setCellValue(bookDetail.getId());
//                row.createCell(cellCount++).setCellValue(bookDetail.getPublish_date());
//                row.createCell(cellCount++).setCellValue(bookDetail.getBest_seller_yn());
// 
//            }
// 
//        }
 
    }
 
    @Override
    protected Workbook createWorkbook() {
        return new XSSFWorkbook();
    }
 
}