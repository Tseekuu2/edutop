package com.nsdevil.osce.common.view;

import java.io.File;
import java.io.FileInputStream;
import java.io.OutputStream;
import java.net.URLDecoder;
import java.net.URLEncoder;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.util.FileCopyUtils;
import org.springframework.web.servlet.view.AbstractView;
 
public class DownloadView extends AbstractView {

	public DownloadView() {
		setContentType("binary/octet-stream; charset=utf-8");
	}
	
	@Override
	protected void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception {
		String filePath = (model.get("filePath") == null ? "" : model.get("filePath").toString());
		String fileName = (model.get("fileName") == null ? "" : model.get("fileName").toString());
		
		filePath = URLDecoder.decode(filePath,"UTF-8");
		fileName = URLDecoder.decode(fileName,"UTF-8");
		
		String browser = request.getHeader("User-Agent");
		if(browser.contains("MSIE") || browser.contains("Trident") || browser.contains("Edge")) {
			fileName = URLEncoder.encode(fileName, "utf-8").replaceAll("\\+", "%20");
		} else {
			fileName = new String(fileName.getBytes("utf-8"), "iso-8859-1");
		}

		response.setContentType(getContentType());
		response.setHeader("Content-Disposition", "attachment; filename=\"" + fileName + "\";");
		response.setHeader("Content-Transfer-Encoding", "binary");
		
		FileInputStream fis = null;
		OutputStream os = null;
		
		try {
			if (!fileName.equals("") && !filePath.equals("")) {
				File file = new File(filePath);
				if (file.exists()) {
					fis = new FileInputStream(file);
					os = response.getOutputStream();
					FileCopyUtils.copy(fis, os);
				} else {
					response.sendError(404);
				}
			} else {
				response.sendError(404);
			}
		} catch(Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (fis != null) { fis.close(); }
				if (os != null) { os.close(); }
			} catch(Exception e) {
				e.printStackTrace();
			}
		}
	}
}